{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/cognitive-services/cognitive-services.module.ts","./src/app/cognitive-services/data.service.ts","./src/app/cognitive-services/face-data.service.ts","./src/app/cognitive-services/text-data.service.ts","./src/app/cognitive-services/vision-data.service.ts","./src/app/demo/cognitive-services.component.ts","./src/app/demo/computer-vision/computer-vision-analyze-image/computer-vision-analyze-image.component.css","./src/app/demo/computer-vision/computer-vision-analyze-image/computer-vision-analyze-image.component.html","./src/app/demo/computer-vision/computer-vision-analyze-image/computer-vision-analyze-image.component.ts","./src/app/demo/computer-vision/computer-vision-read-text/computer-vision-read-text.component.css","./src/app/demo/computer-vision/computer-vision-read-text/computer-vision-read-text.component.html","./src/app/demo/computer-vision/computer-vision-read-text/computer-vision-read-text.component.ts","./src/app/demo/demo-routing.module.ts","./src/app/demo/demo.module.ts","./src/app/demo/emotion/emotion-recognition.component.css","./src/app/demo/emotion/emotion-recognition.component.html","./src/app/demo/emotion/emotion-recognition.component.ts","./src/app/demo/face/face-detection/face-detection.component.css","./src/app/demo/face/face-detection/face-detection.component.html","./src/app/demo/face/face-detection/face-detection.component.ts","./src/app/demo/face/face-verification/face-verification.component.css","./src/app/demo/face/face-verification/face-verification.component.html","./src/app/demo/face/face-verification/face-verification.component.ts","./src/app/demo/face/face-viewer/face-viewer.component.html","./src/app/demo/face/face-viewer/face-viewer.component.ts","./src/app/demo/home/home.component.html","./src/app/demo/home/home.component.ts","./src/app/demo/shared/hero-banner/hero-banner.component.css","./src/app/demo/shared/hero-banner/hero-banner.component.html","./src/app/demo/shared/hero-banner/hero-banner.component.ts","./src/app/demo/text/text-analysis/text-analysis.component.css","./src/app/demo/text/text-analysis/text-analysis.component.html","./src/app/demo/text/text-analysis/text-analysis.component.ts","./src/app/demo/vision/vision.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\n\nconst routes: Routes = [\n  { path: 'root', component: AppComponent },\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: '**', redirectTo: '/home' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \".navbar {\\n    min-height: 70px;\\n}\\n.navbar-brand {\\n    margin-left: 0 !important;\\n    margin-right: 50px;\\n    padding: 0;\\n    line-height: 70px;\\n}\\n.navbar-brand img {\\n    display: inline;\\n    padding-right: 15px;\\n    margin-right: 15px;\\n    border-right: 1px solid #fff;\\n}\\n.fa, .glyphicon, li {\\n    color: #f5f5f5;\\n    font-size: 1em;\\n    cursor: pointer;\\n}\\nli button {\\n    padding: 15px;\\n    color: #000;\\n}\\n.nav > li > a {\\n    padding: 25px 25px 20px 25px;\\n}\\n.nav > li > a:hover, .nav > li > a:active {\\n    color: #fff;\\n    border-bottom: 5px solid #46850f;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<header>\\n  <nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"app-collapse\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li>\\n            <a [routerLink]=\\\"['/']\\\">Home</a>\\n          </li>\\n          <!-- <li>\\n            <a [routerLink]=\\\"['/demo/emotion-recognition']\\\">Emotion</a>\\n          </li>\\n          <li>\\n            <a [routerLink]=\\\"['/demo/face-detection']\\\">Face Detection</a>\\n          </li>\\n          <li>\\n            <a [routerLink]=\\\"['/demo/face-verification']\\\">Face Verification</a>\\n          </li> -->\\n          <li>\\n            <a [routerLink]=\\\"['/demo/analyze-image']\\\">Super Hero Analysis</a>\\n          </li>\\n          <!-- <li>\\n            <a [routerLink]=\\\"['/demo/read-text']\\\">Text Recognition</a>\\n          </li>\\n          <li>\\n            <a [routerLink]=\\\"['/demo/analyze-text']\\\">Text Analysis</a>\\n          </li> -->\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n</header>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Cognitive Services App';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { CognitiveServicesModule } from './cognitive-services/cognitive-services.module';\nimport { DemoModule } from './demo/demo.module';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    DemoModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { DataService } from './data.service';\nimport { FaceDataService } from './face-data.service';\nimport { VisionDataService } from './vision-data.service';\nimport { TextDataService } from './text-data.service';\n\n@NgModule({\n  imports: [\n    HttpModule\n  ],\n  providers: [\n      DataService,\n      FaceDataService,\n      VisionDataService,\n      TextDataService\n  ]\n})\nexport class CognitiveServicesModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/cognitive-services/cognitive-services.module.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Headers, Http, RequestOptions, Response, ResponseContentType, ResponseType } from '@angular/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class DataService {\n\n    protected apiServer = environment.apiServer;\n\n    constructor(protected http: Http) {\n    }\n\n    get<T>(url: string, key?: string,\n           responseType: ResponseContentType.Json | ResponseContentType.ArrayBuffer | ResponseContentType.Blob = ResponseContentType.Json) {\n        const promise = new Promise<T>((resolve, reject) => {\n            let options: {\n                responseType: ResponseContentType;\n                headers: Headers;\n            } = null;\n            if (key) {\n                options = this.setRequestOptions(key, false, responseType);\n            }\n            return this.http.get(url, options).toPromise()\n                .then((response: Response) => {\n                    if (responseType === ResponseContentType.Json) {\n                        resolve(<T>response.json());\n                    } else if (responseType === ResponseContentType.ArrayBuffer) {\n                        resolve(<T><any>response.arrayBuffer());\n                    } else if (responseType === ResponseContentType.Blob) {\n                        resolve(<T><any>response.blob());\n                    }\n                })\n                .catch((reason: any) => {\n                    const errMsg = this.logError(reason);\n                    reject(errMsg);\n                });\n        });\n        return promise;\n    }\n\n    postTextData<T>(url: string, body: string, key: string, responseType = ResponseContentType.Json) {\n        const promise = new Promise<T>((resolve, reject) => {\n            const options = this.setRequestOptions(key, true, responseType, 'text');\n            return this._post<T>(url, body, options, resolve, reject);\n        });\n        return promise;\n    }\n\n    postFormData<T>(url: string, body: string, key: string, responseType = ResponseContentType.Json,\n            extraHeaders?: Headers) {\n        const promise = new Promise<T>((resolve, reject) => {\n            const options = this.setRequestOptions(key, true, responseType, 'form', extraHeaders);\n            return this._post<T>(url, body, options, resolve, reject);\n        });\n        return promise;\n    }\n\n    postBinaryData<T>(url: string, body: ArrayBuffer, key: string, responseType = ResponseContentType.Json) {\n        const promise = new Promise<T>((resolve, reject) => {\n            const options = this.setRequestOptions(key, true, responseType, 'binary');\n            return this._post<T>(url, body, options, resolve, reject);\n        });\n        return promise;\n    }\n\n    postAudioData<T>(url: string, body: Blob, key: string, responseType = ResponseContentType.Json) {\n        const promise = new Promise<T>((resolve, reject) => {\n            const options = this.setRequestOptions(key, true, responseType, 'audio');\n            return this._post<T>(url, body, options, resolve, reject);\n        });\n        return promise;\n    }\n\n    post<T>(url: string, body: any, key: string, responseType = ResponseContentType.Json) {\n        const promise = new Promise<T>((resolve, reject) => {\n            const options = this.setRequestOptions(key, true, responseType);\n            return this._post<T>(url, body, options, resolve, reject);\n        });\n        return promise;\n    }\n\n    postWithMore<T>(url: string, body: any, key: string) {\n        const options = this.setRequestOptions(key, true);\n\n        const promise = new Promise<T>((resolve, reject) => {\n            this.http.post(url, body, options).toPromise()\n                .then((response: Response) => {\n                    if (response.status === 202) {\n                        const operationLocation = response.headers.get('Operation-Location');\n                        if (!operationLocation) {\n                            reject('No Operation-Location header found');\n                        }\n                        const interval = setInterval(() => {\n                            this.http.get(operationLocation, options).toPromise()\n                                .then((response2: Response) => {\n                                    const operationResult = <{ status: string, processingResult: any }>response2.json();\n                                    if (operationResult.status === 'Succeeded') {\n                                        clearInterval(interval);\n                                        resolve(<T>JSON.parse(operationResult.processingResult));\n                                    }\n                                })\n                                .catch((reason: any) => {\n                                    const errMsg = this.logError(reason);\n                                    clearInterval(interval);\n                                    reject(errMsg);\n                                });\n                        }, 5000);\n                    } else {\n                        resolve(<T>response.json());\n                    }\n                })\n                .catch((reason: any) => {\n                    const errMsg = this.logError(reason);\n                    reject(errMsg);\n                });\n        });\n        return promise;\n    }\n\n    private _post<T>(url: string, body: ArrayBuffer | string | Blob, options: any, resolve: Function, reject: Function) {\n        return this.http.post(url, body, options).toPromise()\n            .then((response: Response) => {\n                const contentType = response.headers.get('Content-Type');\n                if (contentType.indexOf('json') > -1) {\n                    resolve(<T>response.json());\n                } else {\n                    const data = new Uint8Array(response.arrayBuffer());\n                    const blob = <any>new Blob([data], { type: contentType });\n                    resolve(<T>blob);\n                }\n            })\n            .catch((reason: any) => {\n                const errMsg = this.logError(reason);\n                reject(errMsg);\n            });\n    }\n\n    private setRequestOptions(key: string, post: boolean,\n            responseType = ResponseContentType.Json,\n            contentType: 'binary' | 'text' | 'form' | 'audio' | 'json' = 'json',\n            extraHeaders?: Headers) {\n        let headersSet = false;\n        const headers = extraHeaders ? extraHeaders : new Headers();\n        if (post) {\n            switch (contentType) {\n                case 'binary':\n                    headers.append('Content-Type', 'application/octet-stream');\n                    break;\n                case 'text':\n                    headers.append('Content-Type', 'text/plain');\n                    break;\n                case 'form':\n                    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                    break;\n                case 'audio':\n                    headers.append('Content-Type', 'audio/wav; codec=\"audio/pcm\"; samplerate=16000');\n                    break;\n                default:\n                    headers.append('Content-Type', 'application/json');\n            }\n            headersSet = true;\n        } else {\n            if (responseType === ResponseContentType.Blob) {\n                headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                headersSet = true;\n            }\n        }\n        if (key) {\n            headers.append('Ocp-Apim-Subscription-Key', key);\n            headers.append('Prediction-Key', key);\n            \n            headersSet = true;\n        }\n\n        return headersSet ? {\n            responseType: responseType,\n            headers: headers\n        } : null;\n    }\n\n    private logError(error: any) {\n        const errMsg = error.message ? error.message :\n            error._body && error._body.code ? `${error._body.code} - ${error._body.message}` :\n                error._body && error._body.error ? `${error._body.error.code} - ${error._body.error.message}` :\n                    error.status ? `${error.status} - ${error.statusText}` : 'Error calling API';\n        console.log(error);\n        return errMsg;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/cognitive-services/data.service.ts","import { Injectable } from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { DataService } from './data.service';\nimport { environment } from '../../environments/environment';\nimport { IRectangle } from './models/vision.models';\nimport { IFace, IFaceVerification } from './models/face.models';\n\n@Injectable()\nexport class FaceDataService extends DataService {\n\n    private key = environment.apiKeys.face;\n\n    detect(imageUrlOrData: SafeResourceUrl | ArrayBuffer): Promise<IFace[]> {\n        const url = `${this.apiServer}/face/v1.0/detect?returnFaceId=true&returnFaceLandmarks=true&returnFaceAttributes=age,gender,smile,facialHair,headPose,glasses`;\n\n        if (typeof imageUrlOrData === 'string') {\n            const body = { url: imageUrlOrData };\n            return this.post<IFace[]>(url, body, this.key);\n        } else {\n            return this.postBinaryData<IFace[]>(url, <ArrayBuffer>imageUrlOrData, this.key);\n        }\n    }\n\n    detectEmotion(imageUrlOrData: SafeResourceUrl | ArrayBuffer): Promise<IFace[]> {\n        // Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.\n        const url = `${this.apiServer}/face/v1.0/detect?returnFaceId=true&returnFaceLandmarks=false&returnFaceAttributes=emotion`;\n\n        if (typeof imageUrlOrData === 'string') {\n            const body = { url: imageUrlOrData };\n            return this.post<IFace[]>(url, body, this.key);\n        } else {\n            return this.postBinaryData<IFace[]>(url, <ArrayBuffer>imageUrlOrData, this.key);\n        }\n    }\n\n    verify(faceId1: string, faceId2: string) {\n        // Verify whether two faces belong to a same person or whether one face belongs to a person.\n        const url = `${this.apiServer}/face/v1.0/verify`;\n\n        const body = { faceId1: faceId1, faceId2: faceId2 };\n\n        return this.post<IFaceVerification>(url, body, this.key);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/cognitive-services/face-data.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { DataService } from './data.service';\nimport { environment } from '../../environments/environment';\nimport { ISentiment, ILanguageDetect, ILanguageKeyPhrase } from './models/text.models';\n\n@Injectable()\nexport class TextDataService extends DataService {\n\n    private key = environment.apiKeys.textAnalytics;\n\n    analyzeSentiment(text: string): Promise<ISentiment> {\n        const url = `${this.apiServer}/text/analytics/v2.0/sentiment`;\n        const body = { documents: [{ id: '1', text: text }] };\n        return this.post<ISentiment>(url, body, this.key);\n    }\n\n    analyzeLanguage(text: string): Promise<ILanguageDetect> {\n        const url = `${this.apiServer}/text/analytics/v2.0/languages`;\n        const body = { documents: [{ id: '1', numberOfLanguagesToDetect: '1', text: text }] };\n        return this.post<ILanguageDetect>(url, body, this.key);\n    }\n\n    analyzeKeyPhrases(text: string, language: string ): Promise<ILanguageKeyPhrase> {\n        const url = `${this.apiServer}/text/analytics/v2.0/keyPhrases`;\n        const body = { documents: [{ id: '1', text: text, language: language }] };\n        return this.post<ILanguageKeyPhrase>(url, body, this.key);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/cognitive-services/text-data.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, ResponseContentType } from '@angular/http';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { environment } from '../../environments/environment';\nimport { DataService } from './data.service';\nimport { IImageFeatures, IOcrResult } from './models/vision.models';\n\n@Injectable()\nexport class VisionDataService extends DataService {\n\n    private key = environment.apiKeys.computerVision;\n\n    analyze(imageUrlOrData: SafeResourceUrl | ArrayBuffer): Promise<IImageFeatures> {\n        // const url = `${this.apiServer}/vision/v1.0/analyze?visualFeatures=Categories,Tags,Description,Faces,ImageType,Color,Adult`;\n        const url = `${this.apiServer}/customvision/v1.1/Prediction/4ec6a3ac-1f8c-4a84-911a-b2a6b018a4e0/url?iterationId=ed9e4537-cbac-4e18-9b3e-1988a9490cde`;\n\n        if (typeof imageUrlOrData === 'string') {\n            const body = { url: imageUrlOrData };\n            return this.post<IImageFeatures>(url, body, this.key);\n        } else {\n            return this.postBinaryData<IImageFeatures>(url, <ArrayBuffer>imageUrlOrData, this.key);\n        }\n    }\n\n    ocr(imageUrlOrData: SafeResourceUrl | ArrayBuffer): Promise<IOcrResult> {\n        const url = `${this.apiServer}/vision/v1.0/ocr`;\n\n        if (typeof imageUrlOrData === 'string') {\n            const body = { url: imageUrlOrData };\n            return this.post<IOcrResult>(url, body, this.key);\n        } else {\n            return this.postBinaryData<IOcrResult>(url, <ArrayBuffer>imageUrlOrData, this.key);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/cognitive-services/vision-data.service.ts","export abstract class CognitiveServicesComponent {\n    errorMessage = '';\n    isLoading: boolean;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/demo/cognitive-services.component.ts","module.exports = \"h2, h4 {\\n    text-align: center;\\n}\\n.image-features {\\n    background-color:rgba(255,255,255,0.4);\\n    position:absolute;\\n    text-align: center;\\n    font-weight: bold;\\n    font-size: 12px;\\n    color: black;\\n}\\n.result-section table {\\n    background-color:white;\\n}\\n.result-label {\\n    width:50px;\\n}\\n.result-description {\\n    width:70%;\\n}\\n.result-color-box {\\n    width:20px;\\n    height:20px;\\n    border-style:solid;\\n    border-color:black;\\n}\\n.filmstrip-row {\\n    margin-top: 20px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/computer-vision/computer-vision-analyze-image/computer-vision-analyze-image.component.css\n// module id = ./src/app/demo/computer-vision/computer-vision-analyze-image/computer-vision-analyze-image.component.css\n// module chunks = main","module.exports = \"<app-hero-banner [apiTitle]='apiTitle' [apiDescription]='apiDescription'>\\n</app-hero-banner>\\n<div class=\\\"container\\\">\\n    <div class=\\\"col-xs-12\\\" (window:resize)=\\\"onResize($event)\\\">\\n        <!-- <div class=\\\"row top-padding\\\">\\n            <h2>Who's that hero?</h2>\\n        </div>\\n        <div class=\\\"row api-description bottom-padding\\\">\\n            Enter an image URL of a super hero below and we will tell you if the hero is from the DC or Marvel universe, and which hero we think it is...\\n        </div> -->\\n        <div style=\\\"height:20px\\\"></div>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <div class=\\\"img_container\\\">\\n                    <img [src]=\\\"selectedImageUrl\\\" alt=\\\"Selected Image\\\" class=\\\"selected-image\\\" (load)=\\\"selectedImageLoaded($event)\\\" />\\n                    <div *ngFor=\\\"let faceRectangle of faceRectangles\\\" [style.top]=\\\"faceRectangle.percentTop + '%'\\\" [style.left]=\\\"faceRectangle.percentLeft +'%'\\\"\\n                        [style.width]=\\\"faceRectangle.percentWidth + '%'\\\" [style.height]=\\\"faceRectangle.percentHeight + '%'\\\" class=\\\"face-rectangle\\\">\\n                    </div>\\n                    <div *ngFor=\\\"let faceRectangle of faceRectangles; let i = index\\\" class=\\\"face-rectangle image-features\\\" [style.top]=\\\"(faceRectangle.percentTop + faceRectangle.percentHeight) + '%'\\\"\\n                        [style.left]=\\\"faceRectangle.percentLeft +'%'\\\" [style.min-width]=\\\"faceRectangle.percentWidth + '%'\\\">\\n                        <span *ngIf=\\\"imageFeatures.faces && imageFeatures.faces[i]\\\">{{imageFeatures.faces[i].gender}}, age:{{imageFeatures.faces[i].age}}</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" data-defaultValue=\\\"Image URL\\\" [(ngModel)]=\\\"internetImageUrl\\\" />\\n\\n                    <div class=\\\"input-group-btn\\\">\\n                        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"onInternetUrlSelected()\\\">\\n                            <span class=\\\"glyphicon glyphicon-globe\\\" aria-hidden=\\\"true\\\"></span>\\n                        </button>\\n                        <!-- <label class=\\\"btn btn-default\\\" type=\\\"button\\\">\\n                            <span class=\\\"glyphicon glyphicon-folder-open\\\"></span>\\n                            <input type=\\\"file\\\" (change)=\\\"onFilesSelected($event)\\\" accept=\\\"image/bmp,image/jpeg,image/png,image/gif\\\" style=\\\"font-size: 50px;width: 120px;opacity: 0;filter:alpha(opacity=0);position: relative;top: -40px;left: -20px\\\"\\n                            />\\n                        </label> -->\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <div class=\\\"demo-codes detection-demo-codes result-section\\\">\\n                    <h1 class=\\\"text-info display-middle\\\" *ngIf=\\\"isLoading\\\">\\n                        <i class=\\\"glyphicon glyphicon-refresh spinning\\\"></i>\\n                    </h1>\\n                    <div *ngIf=\\\"!isLoading\\\">\\n                        <div class=\\\"btn-group btn-group-justified\\\" role=\\\"group\\\">\\n                            <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                                <button class=\\\"btn btn-info\\\" [ngClass]=\\\"{'active': !showJSON }\\\" (click)=\\\"toggleJSON(false)\\\">Results</button>\\n                            </div>\\n                            <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                                <button class=\\\"btn btn-info\\\" [ngClass]=\\\"{'active': showJSON }\\\" (click)=\\\"toggleJSON(true)\\\">JSON</button>\\n                            </div>\\n                        </div>\\n                        <pre class=\\\"code\\\" [hidden]=\\\"!showJSON\\\">{{ imageFeatures | json }}</pre>\\n                        <h4 [hidden]=\\\"showJSON\\\">Image Features</h4>\\n                        <table class=\\\"table table-bordered\\\" [hidden]=\\\"showJSON\\\">\\n                            <thead>\\n\\n                                <tr>\\n                                    <td>Tag</td>\\n                                    <td>Probability</td>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n\\n                                <tr *ngFor=\\\"let prediction of imageFeatures.Predictions\\\">\\n                                    <td style=\\\"text-transform: uppercase\\\">\\n                                        {{prediction.Tag}}\\n                                    </td>\\n                                    <td>\\n                                        {{prediction.Probability | percent}}\\n                                    </td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row filmstrip-row bottom-padding\\\">\\n            <div *ngFor=\\\"let imagePath of imageList\\\" class=\\\"col-xs-6 col-sm-4 col-md-3 col-lg-2 filmstrip\\\">\\n                <img [src]=\\\"imagePath\\\" (click)=\\\"selectStockImage(imagePath)\\\" [ngClass]=\\\"imagePath === internetImageUrl ? 'selected' : ''\\\"\\n                />\\n            </div>\\n        </div>\\n\\n        <br>\\n        <div class=\\\"row\\\"><br>\\n            <h2>What did we learn?</h2>\\n            <h3>more training...</h3>\\n            <p>Some interesting \\\"statistics:\\\"</p>\\n            <ul>\\n                <li><strong>The FLASH</strong>: Has a 71% confidence of being <em>SPIDERMAN</em></li>\\n                <li><strong>SPIDERMAN</strong>: Has a 10% confidence of being <em>The FLASH</em> and 100% confidence of being a <strong>DC HERO</strong></li>\\n                <li><strong>Chris Evans</strong> is <em>WONDER WOMAN</em></li>\\n                <li>When <strong>The FLASH</strong> and <strong>SUPERMAN</strong> race, audiences mostly see <em>The Flash</em></li>\\n                <li>Dragonball Z's <strong>Goku</strong> is a <em>DC HERO</em></li>\\n            </ul>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <p style=\\\"text-align:center\\\">Made by <a href=\\\"https://github.com/azanebrain\\\">azanebrain</a> &amp; <a href=\\\"https://github.com/golfergeek\\\">golfergeek</a> at the NGConf2018 AI Hackathon hosted by Microsoft</p>\\n        </div>\\n\\n        <!-- <div class=\\\"row\\\">\\n            <h2>Want to build this?</h2>\\n        </div>\\n        <div class=\\\"row row-size2\\\">\\n            <h2>\\n                <a class=\\\"button button-secondary button-primary\\\" href=\\\"https://docs.microsoft.com/en-us/azure/cognitive-services/computer-vision/quickstarts/javascript#AnalyzeImage\\\">\\n                    Documentation</a>\\n            </h2>\\n        </div> -->\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/computer-vision/computer-vision-analyze-image/computer-vision-analyze-image.component.html\n// module id = ./src/app/demo/computer-vision/computer-vision-analyze-image/computer-vision-analyze-image.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer, Title } from '@angular/platform-browser';\nimport { VisionComponent } from '../../vision/vision.component';\nimport { VisionDataService } from '../../../cognitive-services/vision-data.service';\nimport { environment } from '../../../../environments/environment';\nimport { IImageFeatures } from '../../../cognitive-services/models/vision.models';\n\n@Component({\n  selector: 'app-computer-vision-analyze-image',\n  templateUrl: './computer-vision-analyze-image.component.html',\n  styleUrls: ['./computer-vision-analyze-image.component.css']\n})\nexport class ComputerVisionAnalyzeImageComponent extends VisionComponent implements OnInit {\n    errorMessage = '';\n    imageFeatures: IImageFeatures;\n    showJSON = false;\n    apiTitle = 'Computer Vision API - Analyze Image';\n    apiDescription = 'Extract rich information from images to categorize and process visual data—and protect your users from unwanted content.';\n\n    constructor(protected sanitizer: DomSanitizer, private titleService: Title,\n      private visionDataService: VisionDataService) {\n      super(sanitizer);\n      this.titleService.setTitle('Analyze Image');\n  }\n\n    ngOnInit() {\n        this.isLoading = true;\n        this.imageList = environment.objectImageUrls;\n        this.internetImageUrl = environment.objectImageUrls[0];\n        this.onInternetUrlSelected();\n    }\n\n    bestDescription() {\n        if (!this.imageFeatures || !this.imageFeatures.description) {\n            return null;\n        }\n        return this.imageFeatures.description.captions.reduce((prev, current) => {\n            return (prev.confidence > current.confidence) ? prev : current;\n        });\n    }\n\n    highConfidenceTags() {\n        return this.imageFeatures.tags.filter(tag => {\n            return tag.confidence >= 0.5;\n        }).map(tag => {\n            return tag.name;\n        }).join(', ');\n    }\n\n    lowConfidenceTags() {\n        return this.imageFeatures.tags.filter(tag => {\n            return tag.confidence < 0.5;\n        }).map(tag => {\n            return tag.name;\n        }).join(', ');\n    }\n\n    toggleJSON(b: boolean) {\n        this.showJSON = b;\n    }\n\n    onResize() {\n        this.clearFaces();\n        this.processFaces();\n    }\n\n    refreshDetection() {\n        this.clearFaces();\n        this.errorMessage = '';\n\n        if (!this.selectedImageUrl) {\n            this.errorMessage = 'Please provide a valid URL';\n        } else {\n            this.isLoading = true;\n            this.visionDataService.analyze(this.selectedImageUrl)\n                .then(imageFeatures => {\n                    this.imageFeatures = imageFeatures;\n                    this.isLoading = false;\n                    this.processFaces();\n                })\n                .catch((error) => {\n                    this.errorMessage = error;\n                    this.isLoading = false;\n                });\n        }\n    }\n\n    processFile(result: any) {\n        this.isLoading = true;\n        this.visionDataService.analyze(result)\n            .then(imageFeatures => {\n                this.imageFeatures = imageFeatures;\n                this.isLoading = false;\n                this.processFaces();\n            })\n            .catch((error) => {\n                this.errorMessage = error;\n                this.isLoading = false;\n            });\n    }\n\n    private processFaces() {\n        if (!this.selectedImage) {\n            return;\n        }\n\n        if (this.imageFeatures.faces) {\n            this.imageFeatures.faces.forEach(face => {\n                this.faceRectangles.push(this.processFaceRectangle(face.faceRectangle));\n            });\n        }\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/demo/computer-vision/computer-vision-analyze-image/computer-vision-analyze-image.component.ts","module.exports = \"h2 {\\n    text-align: center\\n}\\n.filmstrip-row {\\n    margin-top: 20px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/computer-vision/computer-vision-read-text/computer-vision-read-text.component.css\n// module id = ./src/app/demo/computer-vision/computer-vision-read-text/computer-vision-read-text.component.css\n// module chunks = main","module.exports = \"<app-hero-banner [apiTitle]='apiTitle' [apiDescription]='apiDescription'>\\n</app-hero-banner>\\n<div class=\\\"container\\\">\\n    <div class=\\\"col-xs-12\\\">\\n        <div class=\\\"row top-padding\\\">\\n            <h2>Read Text in Images</h2>\\n        </div>\\n        <div class=\\\"row api-description bottom-padding\\\">\\n            Optical Character Recognition (OCR) detects text in an image and extracts the recognized words into a machine-readable character\\n            stream. Analyze images to detect embedded text, generate character streams and enable searching. Allow users\\n            to take photos of text instead of copying to save time and effort.\\n        </div>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <div class=\\\"img_container\\\">\\n                    <img [src]=\\\"selectedImageUrl\\\" alt=\\\"Selected Image\\\" class=\\\"selected-image\\\" />\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" data-defaultValue=\\\"Image URL\\\" [(ngModel)]=\\\"internetImageUrl\\\" />\\n\\n                    <div class=\\\"input-group-btn\\\">\\n                        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"onInternetUrlSelected()\\\">\\n                            <span class=\\\"glyphicon glyphicon-globe\\\" aria-hidden=\\\"true\\\"></span>\\n                        </button>\\n                        <label class=\\\"btn btn-default\\\" type=\\\"button\\\">\\n                            <span class=\\\"glyphicon glyphicon-folder-open\\\"></span>\\n                            <input type=\\\"file\\\" (change)=\\\"onFilesSelected($event)\\\" accept=\\\"image/bmp,image/jpeg,image/png,image/gif\\\" style=\\\"font-size: 50px;width: 120px;opacity: 0;filter:alpha(opacity=0);position: relative;top: -40px;left: -20px\\\"\\n                            />\\n                        </label>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <div class=\\\"demo-codes detection-demo-codes\\\">\\n                    <h1 class=\\\"text-info display-middle\\\" *ngIf=\\\"isLoading\\\">\\n                        <i class=\\\"glyphicon glyphicon-refresh spinning\\\"></i>\\n                    </h1>\\n                    <div *ngIf=\\\"!isLoading\\\">\\n                        <div class=\\\"btn-group btn-group-justified\\\" role=\\\"group\\\">\\n                            <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                                <button class=\\\"btn btn-info\\\" [ngClass]=\\\"{'active': !showJSON }\\\" (click)=\\\"toggleJSON(false)\\\">Results</button>\\n                            </div>\\n                            <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                                <button class=\\\"btn btn-info\\\" [ngClass]=\\\"{'active': showJSON }\\\" (click)=\\\"toggleJSON(true)\\\">JSON</button>\\n                            </div>\\n                        </div>\\n                        <pre class=\\\"code\\\" [hidden]=\\\"!showJSON\\\">{{ ocrResult | json }}</pre>\\n                        <pre class=\\\"code\\\" [hidden]=\\\"showJSON\\\">{{ textResult }}</pre>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row filmstrip-row\\\">\\n            <div *ngFor=\\\"let imagePath of imageList\\\" class=\\\"col-xs-6 col-sm-4 col-md-3 col-lg-2 filmstrip\\\">\\n                <img [src]=\\\"imagePath\\\" (click)=\\\"selectStockImage(imagePath)\\\" [ngClass]=\\\"imagePath === internetImageUrl ? 'selected' : ''\\\"\\n                />\\n            </div>\\n        </div>\\n        <br>\\n        <div class=\\\"row\\\">\\n            <h2>Want to build this?</h2>\\n        </div>\\n        <div class=\\\"row row-size2\\\">\\n            <h2>\\n                <a class=\\\"button button-secondary button-primary\\\" href=\\\"https://docs.microsoft.com/en-us/azure/cognitive-services/computer-vision/quickstarts/javascript#OCR\\\">\\n                    Documentation</a>\\n            </h2>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/computer-vision/computer-vision-read-text/computer-vision-read-text.component.html\n// module id = ./src/app/demo/computer-vision/computer-vision-read-text/computer-vision-read-text.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer, Title } from '@angular/platform-browser';\nimport { VisionComponent } from '../../vision/vision.component';\nimport { IOcrResult } from '../../../cognitive-services/models/vision.models';\nimport { VisionDataService } from '../../../cognitive-services/vision-data.service';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n    selector: 'app-computer-vision-read-text',\n    templateUrl: './computer-vision-read-text.component.html',\n    styleUrls: ['./computer-vision-read-text.component.css']\n})\nexport class ComputerVisionReadTextComponent extends VisionComponent implements OnInit {\n    isLoading = true;\n    errorMessage = '';\n    showJSON = false;\n    textResult: string;\n    ocrResult: IOcrResult;\n    apiTitle = 'Computer Vision API - Read Text';\n    apiDescription = 'Extract rich information from images to categorize and process visual data—and protect your users from unwanted content.';\n\n    constructor(protected sanitizer: DomSanitizer, private titleService: Title,\n      private visionDataService: VisionDataService) {\n      super(sanitizer);\n      this.titleService.setTitle('Read Text');\n  }\n\n    ngOnInit() {\n        this.imageList = environment.textImageUrls;\n        this.internetImageUrl = environment.textImageUrls[0];\n        this.onInternetUrlSelected();\n    }\n\n    toggleJSON(b: boolean) {\n        this.showJSON = b;\n    }\n\n    refreshDetection() {\n        this.errorMessage = '';\n\n        if (!this.selectedImageUrl) {\n            this.errorMessage = 'Please provide a valid URL';\n        } else {\n            this.isLoading = true;\n            this.visionDataService.ocr(this.selectedImageUrl)\n                .then(ocrResult => {\n                    this.processResult(ocrResult);\n                    this.isLoading = false;\n                })\n                .catch((error) => {\n                    this.errorMessage = error;\n                    this.isLoading = false;\n                });\n        }\n    }\n\n    processFile(result: any) {\n        this.isLoading = true;\n        this.visionDataService.ocr(result)\n            .then(ocrResult => {\n                this.processResult(ocrResult);\n                this.isLoading = false;\n            })\n            .catch((error) => {\n                this.errorMessage = error;\n                this.isLoading = false;\n            });\n    }\n\n    processResult(result: IOcrResult) {\n        let plainText = '';\n        if (result.regions != null) {\n            for (let i = 0; i < result.regions.length; i++) {\n                for (let j = 0; j < result.regions[i].lines.length; j++) {\n                    for (let k = 0; k < result.regions[i].lines[j].words.length; k++) {\n                        plainText += result.regions[i].lines[j].words[k].text + ' ';\n                    }\n                    plainText += '\\n';\n                }\n                plainText += '\\n';\n            }\n        } else {\n            plainText += 'empty.';\n        }\n\n        this.textResult = plainText;\n        this.ocrResult = result;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/demo/computer-vision/computer-vision-read-text/computer-vision-read-text.component.ts","import { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { EmotionRecognitionComponent } from './emotion/emotion-recognition.component';\nimport { FaceDetectionComponent } from './face/face-detection/face-detection.component';\nimport { FaceVerificationComponent } from './face/face-verification/face-verification.component';\nimport { ComputerVisionReadTextComponent } from './computer-vision/computer-vision-read-text/computer-vision-read-text.component';\nimport { ComputerVisionAnalyzeImageComponent } from './computer-vision/computer-vision-analyze-image/computer-vision-analyze-image.component';\nimport { TextAnalysisComponent } from './text/text-analysis/text-analysis.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  {\n    path: 'demo',\n    children: [\n      {\n        path: 'emotion-recognition',\n        component: EmotionRecognitionComponent\n      },\n      {\n        path: 'face-detection',\n        component: FaceDetectionComponent\n      },\n      {\n        path: 'face-verification',\n        component: FaceVerificationComponent\n      },\n      {\n        path: 'analyze-image',\n        component: ComputerVisionAnalyzeImageComponent\n      },\n      {\n        path: 'read-text',\n        component: ComputerVisionReadTextComponent\n      },\n      {\n        path: 'analyze-text',\n        component: TextAnalysisComponent\n      }\n    ]\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/demo/demo-routing.module.ts","import { NgModule } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { SafeResourceUrl, DomSanitizer } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CognitiveServicesComponent } from './cognitive-services.component';\nimport { VisionComponent } from './vision/vision.component';\nimport { EmotionRecognitionComponent } from './emotion/emotion-recognition.component';\nimport { HeroBannerComponent } from './shared/hero-banner/hero-banner.component';\nimport { DemoRoutingModule } from './demo-routing.module';\nimport { CognitiveServicesModule } from '../cognitive-services/cognitive-services.module';\nimport { FaceViewerComponent } from './face/face-viewer/face-viewer.component';\nimport { FaceDetectionComponent } from './face/face-detection/face-detection.component';\nimport { FaceVerificationComponent } from './face/face-verification/face-verification.component';\nimport { ComputerVisionReadTextComponent } from './computer-vision/computer-vision-read-text/computer-vision-read-text.component';\nimport { ComputerVisionAnalyzeImageComponent } from './computer-vision/computer-vision-analyze-image/computer-vision-analyze-image.component';\nimport { TextAnalysisComponent } from './text/text-analysis/text-analysis.component';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, CognitiveServicesModule, DemoRoutingModule],\n  declarations: [\n    EmotionRecognitionComponent,\n    FaceViewerComponent,\n    FaceDetectionComponent,\n    FaceVerificationComponent,\n    HeroBannerComponent,\n    ComputerVisionReadTextComponent,\n    ComputerVisionAnalyzeImageComponent,\n    TextAnalysisComponent,\n    HomeComponent\n  ],\n  providers: [Title]\n})\nexport class DemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/demo/demo.module.ts","module.exports = \"h2 {\\n    text-align: center;\\n}\\n.container {\\n    padding-bottom: 50px;\\n}\\n.top-emotion {\\n    position:absolute;\\n    text-align: center;\\n    font-weight: bold;\\n    font-size: 12px;\\n    color: black;\\n}\\n.filmstrip-row {\\n    margin-top: 20px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/emotion/emotion-recognition.component.css\n// module id = ./src/app/demo/emotion/emotion-recognition.component.css\n// module chunks = main","module.exports = \"<app-hero-banner [apiTitle]='apiTitle' [apiDescription]='apiDescription'>\\n</app-hero-banner>\\n<div class=\\\"container\\\">\\n    <div class=\\\"col-xs-12\\\" (window:resize)=\\\"onResize($event)\\\">\\n        <div class=\\\"row\\\">\\n            <h2>Recognize Emotions in Images</h2>\\n        </div>\\n        <div class=\\\"row api-description\\\">\\n            Emotion Detection is part of the Face Detection API and provides an analysis of the predicted emotions expressed in each\\n            face within the frame. The emotions currently enabled are: happiness, surprise, neutral, anger, contempt, disgust,\\n            fear, and sadness.\\n            <br>\\n            <br>To try out the Emotion Detection API, please click the image samples below to generate example results.\\n        </div>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <div class=\\\"img_container\\\">\\n                    <img [src]=\\\"selectedImageUrl\\\" alt=\\\"Selected Image\\\" class=\\\"selected-image\\\" (load)=\\\"selectedImageLoaded($event)\\\" />\\n                    <div *ngFor=\\\"let faceRectangle of faceRectangles; let i = index\\\" [style.top]=\\\"faceRectangle.percentTop + '%'\\\" [style.left]=\\\"faceRectangle.percentLeft +'%'\\\"\\n                        [style.width]=\\\"faceRectangle.percentWidth + '%'\\\" [style.height]=\\\"faceRectangle.percentHeight + '%'\\\" [style.color]=\\\"emotionColor(topEmotion(i),true)\\\"\\n                        class=\\\"face-rectangle\\\">\\n                    </div>\\n                    <div class=\\\"top-emotion\\\" *ngFor=\\\"let faceRectangle of faceRectangles; let i = index\\\" [style.background-color]=\\\"emotionColor(topEmotion(i),false)\\\"\\n                        [style.top]=\\\"(faceRectangle.percentTop + faceRectangle.percentHeight) + '%'\\\" [style.left]=\\\"faceRectangle.percentLeft +'%'\\\"\\n                        [style.min-width]=\\\"faceRectangle.percentWidth + '%'\\\">\\n                        <span>{{topEmotion(i)}}</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" data-defaultValue=\\\"Image URL\\\" [(ngModel)]=\\\"internetImageUrl\\\" />\\n\\n                    <div class=\\\"input-group-btn\\\">\\n                        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"onInternetUrlSelected()\\\">\\n                            <span class=\\\"glyphicon glyphicon-globe\\\" aria-hidden=\\\"true\\\"></span>\\n                        </button>\\n                        <label class=\\\"btn btn-default\\\" type=\\\"button\\\">\\n                            <span class=\\\"glyphicon glyphicon-folder-open\\\"></span>\\n                            <input type=\\\"file\\\" (change)=\\\"onFilesSelected($event)\\\" accept=\\\"image/bmp,image/jpeg,image/png,image/gif\\\" style=\\\"font-size: 50px;width: 120px;opacity: 0;filter:alpha(opacity=0);position: relative;top: -40px;left: -20px\\\"\\n                            />\\n                        </label>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <div class=\\\"demo-codes detection-demo-codes\\\">\\n                    <h1 class=\\\"text-info display-middle\\\" *ngIf=\\\"isLoading\\\">\\n                        <i class=\\\"glyphicon glyphicon-refresh spinning\\\"></i>\\n                    </h1>\\n                    <div *ngIf=\\\"!isLoading\\\">\\n                        <pre class=\\\"code\\\">Number of faces: {{ emotions ? emotions.length : 0 }}&#10;{{ emotions | json }}</pre>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row filmstrip-row\\\">\\n            <div *ngFor=\\\"let imagePath of imageList\\\" class=\\\"col-xs-6 col-sm-4 col-md-3 col-lg-2 filmstrip\\\">\\n                <img (click)=\\\"selectStockImage(imagePath)\\\" [src]=\\\"imagePath\\\" [ngClass]=\\\"imagePath === internetImageUrl ? 'selected' : ''\\\"\\n                />\\n            </div>\\n        </div>\\n        <br>\\n        <div class=\\\"row\\\">\\n            <h2>Want to build this?</h2>\\n        </div>\\n        <div class=\\\"row row-size2\\\">\\n            <h2>\\n                <a class=\\\"button button-secondary button-primary\\\" href=\\\"https://docs.microsoft.com/en-us/azure/cognitive-services/emotion/quickstarts/javascript\\\">\\n                    Documentation</a>\\n            </h2>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/emotion/emotion-recognition.component.html\n// module id = ./src/app/demo/emotion/emotion-recognition.component.html\n// module chunks = main","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer, Title } from '@angular/platform-browser';\nimport { VisionComponent } from '../vision/vision.component';\nimport { environment } from '../../../environments/environment';\nimport { IEmotion } from '../../cognitive-services/models/face.models';\nimport { FaceDataService } from '../../cognitive-services/face-data.service';\n\n@Component({\n    selector: 'app-emotion-recognition',\n    templateUrl: './emotion-recognition.component.html',\n    styleUrls: ['./emotion-recognition.component.css']\n})\nexport class EmotionRecognitionComponent extends VisionComponent implements OnInit {\n    emotions: Array<IEmotion>;\n    apiTitle = 'Emotion Recognition API';\n    apiDescription = 'Analyze faces to detect a range of feelings and personalize your app\\'s responses.';\n\n    public constructor(protected sanitizer: DomSanitizer, private titleService: Title,\n        private faceDataService: FaceDataService) {\n        super(sanitizer);\n        this.titleService.setTitle('Emotion Recognition');\n    }\n\n    ngOnInit() {\n        this.imageList = environment.emotionImageUrls;\n        this.internetImageUrl = this.imageList[0];\n        this.onInternetUrlSelected();\n    }\n\n    topEmotion(index: number) {\n        try {\n            const emotion = this.emotions[index];\n            let maxValue = 0;\n            let maxKey = '';\n            for (const prop in emotion.scores) {\n                if (emotion.scores.hasOwnProperty(prop)) {\n                    if (emotion.scores[prop] > maxValue) {\n                        maxValue = emotion.scores[prop];\n                        maxKey = prop;\n                    }\n                }\n            }\n            return maxKey;\n        } catch (err) {\n            return '';\n        }\n    }\n\n    emotionColor(emotionName: string, opaque: boolean) {\n        const opacity = opaque ? '1' : '.3';\n        switch (emotionName) {\n            case 'anger': return `rgba(255,0,0,${opacity})`;\n            case 'contempt': return `rgba(233,150,122,${opacity})`;\n            case 'disgust': return `rgba(153,50,204,${opacity})`;\n            case 'fear': return `rgba(0,0,0,${opacity})`;\n            case 'happiness': return `rgba(255,215,0,${opacity})`;\n            case 'neutral': return `rgba(128,128,128,${opacity})`;\n            case 'sadness': return `rgba(65,105,225,${opacity})`;\n            case 'surprise': return `rgba(255,69,0,${opacity})`;\n        }\n        return `rgba(255,255,255,${opacity})`;\n    }\n\n    refreshDetection() {\n        this.clearFaces();\n        this.errorMessage = '';\n\n        if (!this.isLoading) {\n\n            if (!this.selectedImageUrl) {\n                this.errorMessage = 'Please provide a valid URL';\n            } else {\n                this.isLoading = true;\n                this.faceDataService.detectEmotion(this.selectedImageUrl)\n                    .then(faces => {\n                        this.parseResult(faces);\n                    })\n                    .catch((error) => {\n                        this.errorMessage = error;\n                        this.isLoading = false;\n                    });\n            }\n        }\n    }\n\n    processFile(result: any) {\n        this.isLoading = true;\n        this.faceDataService.detectEmotion(result)\n        .then(faces => {\n            this.parseResult(faces);\n        })\n        .catch((error) => {\n            this.errorMessage = error;\n            this.isLoading = false;\n        });\n    }\n\n    onResize() {\n        this.clearFaces();\n        this.processFaces();\n    }\n\n    private parseResult(faces) {\n        this.emotions = [];\n        faces.forEach(face => {\n            this.emotions.push({\n                faceRectangle: face.faceRectangle,\n                scores: face.faceAttributes.emotion\n            });\n        });\n        this.isLoading = false;\n        this.processFaces();\n    }\n\n    private processFaces(): void {\n        if (!this.selectedImage) {\n            return;\n        }\n        (this.emotions || []).forEach(emotion => {\n            this.faceRectangles.push(this.processFaceRectangle(emotion.faceRectangle));\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/demo/emotion/emotion-recognition.component.ts","module.exports = \"h2 {\\n    text-align: center;\\n}\\n.filmstrip-row {\\n    margin-top: 20px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/face/face-detection/face-detection.component.css\n// module id = ./src/app/demo/face/face-detection/face-detection.component.css\n// module chunks = main","module.exports = \"<app-hero-banner [apiTitle]='apiTitle' [apiDescription]='apiDescription'>\\n</app-hero-banner>\\n<div class=\\\"container\\\">\\n    <div class=\\\"col-xs-12\\\">\\n        <div class=\\\"row\\\">\\n            <h2>Face Detection</h2>\\n        </div>\\n        <div class=\\\"row api-description\\\">\\n            Detecting faces in images is the first step to a number of exciting facial recognition and emotion-prediction tasks. For\\n            example, enabling a 1-1 in-store experience for loyal customers, powering apps that utilize a mobile camera,\\n            or improving log-in security for known customers.\\n            <br>\\n            <br>The Face Detection API enables you to detect one or more faces in an image, along with selected attributes such\\n            as predicted age, gender, and the presence of other facial features. 27 landmark positions are also recorded\\n            for each face identified.\\n        </div>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\n        <div class=\\\"row\\\">\\n            <app-face-viewer (faceDetected)=\\\"onFaceDetected('1', $event)\\\" (faceError)=\\\"onError($event)\\\"></app-face-viewer>\\n            <div class=\\\"col-xs-12 col-sm-6\\\">\\n                <div class=\\\"demo-codes detection-demo-codes\\\">\\n                    <h1 class=\\\"text-info display-middle\\\" *ngIf=\\\"isLoading\\\">\\n                        <i class=\\\"glyphicon glyphicon-refresh spinning\\\"></i>\\n                    </h1>\\n                    <div *ngIf=\\\"!isLoading\\\">\\n                        <pre class=\\\"code\\\">Number of faces: {{ faces ? faces.length : 0 }}&#10;{{ faces | json }}</pre>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row filmstrip-row\\\">\\n            <div *ngFor=\\\"let imagePath of imageList\\\" class=\\\"col-xs-6 col-sm-4 col-md-3 col-lg-2 filmstrip\\\">\\n                <img [src]=\\\"imagePath\\\" (click)=\\\"selectImage(imagePath)\\\" [ngClass]=\\\"imagePath === selectedImagePath ? 'selected' : ''\\\" />\\n            </div>\\n        </div>\\n        <br>\\n        <div class=\\\"row\\\">\\n            <h2>Want to build this?</h2>\\n        </div>\\n        <div class=\\\"row row-size2\\\">\\n            <h2>\\n                <a class=\\\"button button-secondary button-primary\\\" href=\\\"https://docs.microsoft.com/en-us/azure/cognitive-services/face/quickstarts/javascript#Detect\\\">\\n                    Documentation</a>\\n            </h2>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/face/face-detection/face-detection.component.html\n// module id = ./src/app/demo/face/face-detection/face-detection.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ImageSelectedEvent } from '../../vision/vision.component';\nimport { FaceViewerComponent } from '../face-viewer/face-viewer.component';\nimport { IFace } from '../../../cognitive-services/models/face.models';\nimport { DomSanitizer, Title } from '@angular/platform-browser';\nimport { FaceDataService } from '../../../cognitive-services/face-data.service';\nimport { environment } from '../../../../environments/environment';\nimport { CognitiveServicesComponent } from '../../cognitive-services.component';\n\n@Component({\n    selector: 'app-face-detection',\n    templateUrl: './face-detection.component.html',\n    styleUrls: ['./face-detection.component.css']\n})\nexport class FaceDetectionComponent extends CognitiveServicesComponent implements OnInit {\n    @ViewChild(FaceViewerComponent) viewerComponent: FaceViewerComponent;\n\n    imageList: Array<string>;\n    selectedImagePath: string;\n    faces: Array<IFace> = [];\n    apiTitle = 'Facial Recognition API';\n    apiDescription = 'Detect human faces and compare similar ones, organize people into groups according to visual similarity, and identify previously tagged people in images.';\n\n    public constructor(private titleService: Title,\n        private faceDataService: FaceDataService) {\n        super();\n        this.titleService.setTitle('Face Detection');\n    }\n\n    ngOnInit() {\n        this.imageList = environment.faceImageUrls;\n        this.selectImage(this.imageList[0]);\n        this.viewerComponent.imageSelected.subscribe((e: ImageSelectedEvent) => {\n            this.selectedImagePath = e.imagePath;\n        });\n    }\n\n    selectImage(imagePath: string) {\n        this.errorMessage = '';\n        this.viewerComponent.selectStockImage(imagePath);\n    }\n\n    onFaceDetected(faceViewerId: string, faces: Array<IFace>) {\n        this.faces = faces;\n    }\n\n    onError(errorMessage: string) {\n        this.errorMessage = errorMessage;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/demo/face/face-detection/face-detection.component.ts","module.exports = \".component-container {\\n    background-color: #fafafa;\\n    padding-top:35px;\\n    padding-bottom:50px;\\n}\\nh2 {\\n    text-align: center;\\n}\\n.result-row {\\n    margin-top: 20px;\\n}\\n.result-row img {\\n    padding: 0;\\n}\\n.verification-box {\\n    border: 1px solid black;\\n    height: 95px;\\n    padding: 5px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/face/face-verification/face-verification.component.css\n// module id = ./src/app/demo/face/face-verification/face-verification.component.css\n// module chunks = main","module.exports = \"<app-hero-banner [apiTitle]='apiTitle' [apiDescription]='apiDescription'>\\n</app-hero-banner>\\n<div class=\\\"component-container\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <h2>Face Verification</h2>\\n        </div>\\n        <div class=\\\"row api-description\\\">\\n            Check the likelihood that two faces belong to the same person. The API will return a confidence score about how likely it\\n            is that the two faces belong to one person.\\n        </div>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\n        <div class=\\\"row\\\">\\n            <app-face-viewer #fvc1 (faceDetecting)=\\\"onFaceDetecting()\\\" (faceError)=\\\"onError($event)\\\"></app-face-viewer>\\n            <app-face-viewer #fvc2 (faceDetecting)=\\\"onFaceDetecting()\\\" (faceError)=\\\"onError($event)\\\"></app-face-viewer>\\n        </div>\\n        <div class=\\\"row result-row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n                <div class=\\\"verification-box\\\">\\n                    <span>Verification Result:</span>\\n                    <br/>\\n                    <span>{{ verificationStatus }}</span>\\n                    <br/>\\n                    <span>{{ resultStatus }}</span>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row result-row\\\">\\n            <div *ngFor=\\\"let imagePair of imagePairs\\\" class=\\\"col-xs-4\\\">\\n                <div class=\\\"row\\\" (click)=\\\"selectImagePair(imagePair)\\\" class=\\\"image-pair\\\" [ngClass]=\\\"imagePair.image1 === selectedImagePair.image1 && imagePair.image2 === selectedImagePair.image2 ? 'selected' : ''\\\">\\n                    <img [src]=\\\"imagePair.image1\\\" class=\\\"col-xs-6\\\" />\\n                    <img [src]=\\\"imagePair.image2\\\" class=\\\"col-xs-6\\\" />\\n                </div>\\n            </div>\\n        </div>\\n        <br>\\n        <div class=\\\"row\\\">\\n            <h2>Want to build this?</h2>\\n        </div>\\n        <div class=\\\"row row-size2\\\">\\n            <h2>\\n                <a class=\\\"button button-secondary button-primary\\\" href=\\\"https://docs.microsoft.com/en-us/azure/cognitive-services/face/quickstarts/javascript#Identify\\\">\\n                    Documentation</a>\\n            </h2>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/face/face-verification/face-verification.component.html\n// module id = ./src/app/demo/face/face-verification/face-verification.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, ViewChild } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer, Title } from '@angular/platform-browser';\nimport { FaceViewerComponent } from '../face-viewer/face-viewer.component';\nimport { ImagePair, IFace } from '../../../cognitive-services/models/face.models';\nimport { ImageSelectedEvent } from '../../vision/vision.component';\nimport { FaceDataService } from '../../../cognitive-services/face-data.service';\nimport { environment } from '../../../../environments/environment';\nimport { CognitiveServicesComponent } from '../../cognitive-services.component';\n\n@Component({\n    selector: 'app-face-verification',\n    templateUrl: './face-verification.component.html',\n    styleUrls: ['./face-verification.component.css']\n})\nexport class FaceVerificationComponent extends CognitiveServicesComponent implements OnInit {\n    @ViewChild('fvc1') viewerComponent1: FaceViewerComponent;\n    @ViewChild('fvc2') viewerComponent2: FaceViewerComponent;\n\n    apiTitle = 'Facial Recognition API';\n    apiDescription = 'Detect human faces and compare similar ones, organize people into groups according to visual similarity, and identify previously tagged people in images.';\n\n    imagePairs: Array<ImagePair>;\n    selectedImagePair: ImagePair;\n    faceId1: string;\n    faceId2: string;\n    verificationStatus: string;\n    resultStatus: string;\n\n    public constructor(private titleService: Title,\n        private faceDataService: FaceDataService) {\n        super();\n        this.titleService.setTitle('Face Verification');\n    }\n\n    onFaceDetecting() {\n        this.errorMessage = '';\n    }\n\n    ngOnInit() {\n        this.imagePairs = environment.faceImagePairs;\n        this.selectImagePair(this.imagePairs[0]);\n\n        this.viewerComponent1.imageSelected.subscribe((e: ImageSelectedEvent) => {\n            this.selectedImagePair = { image1: e.imagePath, image2: this.selectedImagePair.image2 };\n        });\n        this.viewerComponent1.faceDetected.subscribe((faces: Array<IFace>) => {\n            if (this.validateFace(faces)) {\n                this.faceId1 = faces[0].faceId;\n                this.verifyFaces();\n            }\n        });\n\n        this.viewerComponent2.imageSelected.subscribe((e: ImageSelectedEvent) => {\n            this.selectedImagePair = { image1: this.selectedImagePair.image1, image2: e.imagePath };\n        });\n        this.viewerComponent2.faceDetected.subscribe((faces: Array<IFace>) => {\n            if (this.validateFace(faces)) {\n                this.faceId2 = faces[0].faceId;\n                this.verifyFaces();\n            }\n        });\n    }\n\n    selectImagePair(imagePair: any) {\n        this.selectedImagePair = imagePair;\n        this.viewerComponent1.selectStockImage(imagePair.image1);\n        this.viewerComponent2.selectStockImage(imagePair.image2);\n    }\n\n    validateFace(faces: Array<IFace>): boolean {\n        if (faces.length === 0) {\n            this.verificationStatus = 'No faces detected. Please choose an image containing one face.';\n            return false;\n        } else if (faces.length > 1) {\n            this.verificationStatus = 'More than one face detected. Please choose an image containing only one face.';\n            return false;\n        }\n\n        return true;\n    }\n\n    verifyFaces() {\n        if (this.faceId1 && this.faceId2) {\n            this.faceDataService.verify(this.faceId1, this.faceId2).then(result => {\n                if (result.isIdentical) {\n                    this.verificationStatus = 'The two faces belong to the same person.';\n                } else {\n                    this.verificationStatus = 'The two faces belong to different people.';\n                }\n                this.resultStatus = `Confidence is ${result.confidence}`;\n            })\n            .catch((error) => {\n                this.errorMessage = error;\n            });\n        }\n    }\n\n    onError(errorMessage: string) {\n        this.errorMessage = errorMessage;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/demo/face/face-verification/face-verification.component.ts","module.exports = \"<div class=\\\"col-xs-12 col-sm-6\\\" (window:resize)=\\\"onResize($event)\\\">\\n    <div class=\\\"img_container\\\">\\n        <img [src]=\\\"selectedImageUrl\\\" alt=\\\"Selected Image\\\" class=\\\"selected-image\\\" (load)=\\\"selectedImageLoaded($event)\\\" />\\n        <div *ngFor=\\\"let faceRectangle of faceRectangles\\\" [style.top]=\\\"faceRectangle.percentTop + '%'\\\" [style.left]=\\\"faceRectangle.percentLeft +'%'\\\"\\n            [style.width]=\\\"faceRectangle.percentWidth + '%'\\\" [style.height]=\\\"faceRectangle.percentHeight + '%'\\\" class=\\\"face-rectangle\\\">\\n        </div>\\n        <div *ngFor=\\\"let faceLandmark of faceLandmarks\\\" title=\\\"{{ faceLandmark.name }}\\\" style.top=\\\"{{ faceLandmark.style.percentTop }}%\\\"\\n            style.left=\\\"{{ faceLandmark.style.percentLeft }}%\\\" class=\\\"face-landmark\\\" [ngClass]=\\\"isFaceLandmarksEnabled ? '' : 'hidden'\\\"></div>\\n    </div>\\n    <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-btn\\\">\\n            <button class=\\\"btn btn-default\\\" type=\\\"button\\\" title=\\\"Toggle Face Landmarks\\\" (click)=\\\"toggleFaceLandmarks()\\\">\\n                <span class=\\\"glyphicon\\\" [ngClass]=\\\"isFaceLandmarksEnabled ? 'glyphicon-eye-open' : 'glyphicon-eye-close'\\\" aria-hidden=\\\"true\\\"></span>\\n            </button>\\n        </div>\\n\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" data-defaultValue=\\\"Image URL\\\" [(ngModel)]=\\\"internetImageUrl\\\" />\\n\\n        <div class=\\\"input-group-btn\\\">\\n            <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"onInternetUrlSelected()\\\">\\n                <span class=\\\"glyphicon glyphicon-globe\\\" aria-hidden=\\\"true\\\"></span>\\n            </button>\\n            <label class=\\\"btn btn-default\\\" type=\\\"button\\\">\\n                <span class=\\\"glyphicon glyphicon-folder-open\\\"></span>\\n                <input type=\\\"file\\\" (change)=\\\"onFilesSelected($event)\\\" accept=\\\"image/bmp,image/jpeg,image/png,image/gif\\\"\\n                       style=\\\"font-size: 50px;width: 120px;opacity: 0;filter:alpha(opacity=0);position: relative;top: -40px;left: -20px\\\" />\\n            </label>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/face/face-viewer/face-viewer.component.html\n// module id = ./src/app/demo/face/face-viewer/face-viewer.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer } from '@angular/platform-browser';\nimport { IFace } from '../../../cognitive-services/models/face.models';\nimport { VisionComponent } from '../../vision/vision.component';\nimport { FaceDataService } from '../../../cognitive-services/face-data.service';\n\n@Component({\n    selector: 'app-face-viewer',\n    templateUrl: './face-viewer.component.html'\n})\nexport class FaceViewerComponent extends VisionComponent implements OnInit {\n    @Output() faceDetecting = new EventEmitter();\n    @Output() faceDetected = new EventEmitter<Array<IFace>>();\n    @Output() faceError = new EventEmitter<string>();\n\n    isFaceLandmarksEnabled = true;\n    faces: Array<IFace> = [];\n    faceLandmarks: Array<any> = [];\n\n    constructor(protected sanitizer: DomSanitizer, private faceDataService: FaceDataService) {\n        super(sanitizer);\n    }\n\n    ngOnInit() {\n        this.isLoading = true;\n        this.onInternetUrlSelected();\n    }\n\n    clearFaceLandmarks(): void {\n        this.faceLandmarks = [];\n    }\n\n    toggleFaceLandmarks(): void {\n        this.isFaceLandmarksEnabled = !this.isFaceLandmarksEnabled;\n    }\n\n    refreshDetection() {\n        this.clearFaces();\n        this.errorMessage = '';\n        this.clearFaceLandmarks();\n\n        this.faceDetecting.emit();\n\n        if (!this.selectedImageUrl) {\n            this.errorMessage = 'Please provide a valid URL';\n        } else {\n            this.isLoading = true;\n            this.faceDataService.detect(this.selectedImageUrl)\n                .then(faces => {\n                    this.faces = faces;\n                    this.isLoading = false;\n                    this.processFaces();\n                })\n                .catch((error) => {\n                    this.errorMessage = error;\n                    this.isLoading = false;\n                    this.faceError.emit(this.errorMessage);\n                });\n        }\n    }\n\n    processFile(result: any) {\n        this.isLoading = true;\n        this.clearFaceLandmarks();\n        this.faceDataService.detect(result)\n            .then(faces => {\n                this.faces = faces;\n                this.isLoading = false;\n                this.processFaces();\n            })\n            .catch((error) => {\n                this.errorMessage = error;\n                this.isLoading = false;\n                this.faceError.emit(this.errorMessage);\n            });\n    }\n\n    onResize() {\n        this.clearFaces();\n        this.clearFaceLandmarks();\n        this.processFaces();\n    }\n\n    private processFaces() {\n        if (!this.selectedImage) {\n            return;\n        }\n\n        if (this.faces) {\n            this.faces.forEach(face => {\n                this.faceIds.push(face.faceId);\n                this.faceRectangles.push(this.processFaceRectangle(face.faceRectangle));\n\n                for (const faceLandmark in face.faceLandmarks) {\n                    if (face.faceLandmarks.hasOwnProperty(faceLandmark)) {\n                        const faceLandmarkStyle = {\n                            percentTop: (face.faceLandmarks[faceLandmark].y * this.imagePosition.scale + this.selectedImage.offsetTop) /\n                                        this.imagePosition.container.clientHeight * 100,\n                            percentLeft: (face.faceLandmarks[faceLandmark].x * this.imagePosition.scale + this.selectedImage.offsetLeft) /\n                                        this.imagePosition.container.clientWidth * 100\n                        };\n                        this.faceLandmarks.push({\n                            name: faceLandmark,\n                            style: faceLandmarkStyle\n                        });\n                    }\n                }\n            });\n\n            this.faceDetected.emit(this.faces);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/demo/face/face-viewer/face-viewer.component.ts","module.exports = \"<app-hero-banner [apiTitle]='apiTitle' [apiDescription]='apiDescription'>\\n</app-hero-banner>\\n<div>\\n    <h1>Welcome to the ng-ai starter project!</h1>\\n    <br>\\n    <h4>For a small, concise example of using Artificial Intelligence (AI) with Angular check out this\\n        <a href=\\\"https://stackblitz.com/edit/ng-ai-hack-demo\\\">Stackblitz demo</a> (also embedded below).\\n    </h4>\\n    <h5>\\n        Otherwise, click on an item from the navigation bar above to learn more about that service and see a demonstration of its\\n        use.\\n    </h5>\\n    <hr>\\n\\n    <iframe src=\\\"https://stackblitz.com/edit/ng-ai-hack-demo?embed=1&file=app/app.component.ts\\\" width=\\\"100%\\\" height=\\\"1080px\\\"></iframe>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/home/home.component.html\n// module id = ./src/app/demo/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent implements OnInit {\n  apiTitle = 'Home';\n  apiDescription = '';\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/demo/home/home.component.ts","module.exports = \".hero-banner__content {\\n    margin-top: 71px;\\n}\\n.hero-banner-container {\\n    min-height: 315px;\\n    height: 315px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/shared/hero-banner/hero-banner.component.css\n// module id = ./src/app/demo/shared/hero-banner/hero-banner.component.css\n// module chunks = main","module.exports = \"<div class=\\\"hero-banner-container row\\\">\\n    <div class=\\\"hero-banner__content-container\\\">\\n        <div class=\\\"hero-banner__content container col-md-6\\\">\\n            <h1 class=\\\"text--light text--lg text--white\\\">\\n                Who's that hero?\\n                <!-- {{apiTitle}} -->\\n            </h1>\\n            <p class=\\\"text--semilight text--sm text--white\\\">\\n                <!-- {{apiDescription}} -->\\n                Enter an image URL of a super hero below and we will tell you if the hero is from the DC or Marvel universe, and which hero\\n                we think it is...\\n            </p>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/shared/hero-banner/hero-banner.component.html\n// module id = ./src/app/demo/shared/hero-banner/hero-banner.component.html\n// module chunks = main","import { Component, Input, ViewChild } from '@angular/core';\n\n@Component({\n    selector: 'app-hero-banner',\n    templateUrl: './hero-banner.component.html',\n    styleUrls: ['./hero-banner.component.css']\n})\nexport class HeroBannerComponent {\n    @Input() apiTitle: string;\n    @Input() apiDescription: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/demo/shared/hero-banner/hero-banner.component.ts","module.exports = \"h2 {\\n    text-align: center;\\n}\\n.input-section {\\n    height: 240px;\\n}\\n.output-section {\\n    height: 240px;\\n}\\n.input-section textarea {\\n    height:200px;\\n    width:100%;\\n}\\n.code {\\n    background-color: antiquewhite;\\n}\\n.fa-smile-o, .fa-frown-o {\\n    color:darkslategrey;\\n}\\ntable {\\n    background-color:white;\\n}\\n.result-label {\\n    width:50px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/text/text-analysis/text-analysis.component.css\n// module id = ./src/app/demo/text/text-analysis/text-analysis.component.css\n// module chunks = main","module.exports = \"<app-hero-banner [apiTitle]='apiTitle' [apiDescription]='apiDescription'>\\n</app-hero-banner>\\n<div class=\\\"container\\\">\\n    <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"row\\\">\\n            <h2>Sentiment Analysis</h2>\\n        </div>\\n        <div class=\\\"row api-description\\\">\\n            Sentiment analysis is a method to understand the mood and connotations associated text, especially with user-generated content.\\n            In the marketing context, there are many applications such as understanding user reviews, or understanding user\\n            sentiment related to specific products or brands in general.\\n            <br>\\n            <br>The Sentiment Analysis API will take a string of text as input, and return a numeric score on a scale of 0 to\\n            1. The score is calculated based on n-grams, features from part-of-speech tagging, and word embeddings.\\n        </div>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6\\\">\\n                <div class=\\\"input-section\\\">\\n                    <textarea [(ngModel)]=\\\"textToAnalyze\\\"></textArea>\\n                    <button class=\\\"btn btn-wide btn-info pull-right\\\" (click)=\\\"analyzeText()\\\">Analyze</button>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-6\\\">\\n                <div class=\\\"demo-codes detection-demo-codes output-section\\\">\\n                    <h1 class=\\\"text-info display-middle\\\" *ngIf=\\\"isLoading\\\">\\n                        <i class=\\\"glyphicon glyphicon-refresh spinning\\\"></i>\\n                    </h1>\\n                    <div *ngIf=\\\"!isLoading\\\">\\n                        <div class=\\\"btn-group btn-group-justified\\\" role=\\\"group\\\">\\n                            <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                                <button class=\\\"btn btn-info\\\" [ngClass]=\\\"{'active': !showJSON }\\\" (click)=\\\"toggleJSON(false)\\\">Results</button>\\n                            </div>\\n                            <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                                <button class=\\\"btn btn-info\\\" [ngClass]=\\\"{'active': showJSON }\\\" (click)=\\\"toggleJSON(true)\\\">JSON</button>\\n                            </div>\\n                        </div>\\n                        <pre class=\\\"code\\\" [hidden]=\\\"!showJSON\\\">Sentiment: \\n                            {{ sentiment | json }} \\n                            \\n                            Language: \\n                            {{ languageDetect | json }}\\n                            \\n                            Key Phrases:\\n                            {{ languageKeyPhrases | json }}\\n                            </pre>\\n\\n                        <table class=\\\"table table-bordered\\\" [hidden]=\\\"showJSON\\\">\\n                            <tr>\\n                                <td class=\\\"result-label\\\">Sentiment:</td>\\n                                <td>\\n                                    <div class=\\\"progress\\\">\\n                                        <div class=\\\"progress-bar progress-bar-info\\\" role=\\\"progressbar\\\" [style.width]=\\\"score()\\\">{{score()}}\\n                                        </div>\\n                                    </div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td class=\\\"result-label\\\">Language:</td>\\n                                <td>\\n                                    {{detectedLanguage}}\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td class=\\\"result-label\\\">Key Phrases:</td>\\n                                <td>\\n                                    {{keyPhrases}}\\n                                </td>\\n                            </tr>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <br/>\\n        <div>\\n            <button class=\\\"btn btn-wide btn-info\\\" (click)=\\\"insertEnglishPositiveText()\\\">Sample English (Positive)</button>\\n            <button class=\\\"btn btn-wide btn-info\\\" (click)=\\\"insertEnglishNegativeText()\\\">Sample English (Negative)</button>\\n            <button class=\\\"btn btn-wide btn-info\\\" (click)=\\\"insertSpanishPositiveText()\\\">Sample Spanish (Positive)</button>\\n            <button class=\\\"btn btn-wide btn-info\\\" (click)=\\\"insertSpanishNegativeText()\\\">Sample Spanish (Negative)</button>\\n        </div>\\n        <br>\\n        <div class=\\\"row\\\">\\n            <h2>Want to build this?</h2>\\n        </div>\\n        <div class=\\\"row row-size2\\\">\\n            <h2>\\n                <a class=\\\"button button-secondary button-primary\\\" href=\\\"https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview\\\">\\n                    Documentation</a>\\n            </h2>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo/text/text-analysis/text-analysis.component.html\n// module id = ./src/app/demo/text/text-analysis/text-analysis.component.html\n// module chunks = main","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { CognitiveServicesComponent } from '../../cognitive-services.component';\nimport { ISentiment, ILanguageDetect, ILanguageKeyPhrase } from '../../../cognitive-services/models/text.models';\nimport { TextDataService } from '../../../cognitive-services/text-data.service';\n\n@Component({\n  selector: 'app-text-analysis',\n  templateUrl: './text-analysis.component.html',\n  styleUrls: ['./text-analysis.component.css']\n})\nexport class TextAnalysisComponent extends CognitiveServicesComponent implements OnInit {\n  sentiment: ISentiment;\n  languageDetect: ILanguageDetect;\n  languageKeyPhrases: ILanguageKeyPhrase;\n  analysisText = '';\n  sampleEnglishPositiveText = 'I had a wonderful experience! The rooms were wonderful and the staff were helpful.';\n  sampleEnglishNegativeText = 'I had a terrible time at the hotel. The staff were rude and the food was awful.';\n  sampleSpanishPositiveText = 'Los caminos que llevan hasta Monte Rainier son espectaculares y hermosos.';\n  sampleSpanishNegativeText = 'La carretera estaba atascada. Había mucho tráfico el día de ayer.';\n  textToAnalyze = '';\n  detectedLanguageISOName = '';\n  detectedLanguage = '';\n  keyPhrases: Array<{ phrase: string }>;\n\n  showJSON = false;\n  apiTitle = 'Text Analytics API';\n  apiDescription = 'Detect sentiment, key phrases, topics, and language from your text.';\n\n  public constructor(private titleService: Title,\n    private textDataService: TextDataService) {\n    super();\n    this.titleService.setTitle('Text Analytics');\n  }\n\n  ngOnInit() {\n    this.textToAnalyze = this.sampleEnglishPositiveText;\n    this.isLoading = false;\n  }\n\n  public analyzeText() {\n    this.refreshDetection();\n  }\n\n  public insertEnglishPositiveText() {\n    this.textToAnalyze = this.sampleEnglishPositiveText;\n    this.refreshDetection();\n  }\n\n  public insertEnglishNegativeText() {\n    this.textToAnalyze = this.sampleEnglishNegativeText;\n    this.refreshDetection();\n  }\n\n  public insertSpanishPositiveText() {\n    this.textToAnalyze = this.sampleSpanishPositiveText;\n    this.refreshDetection();\n  }\n\n  public insertSpanishNegativeText() {\n    this.textToAnalyze = this.sampleSpanishNegativeText;\n    this.refreshDetection();\n  }\n\n  public toggleJSON(b: boolean) {\n    this.showJSON = b;\n  }\n\n  public score() {\n    return this.sentiment && this.sentiment.documents.length > 0 ?\n      (Math.round(this.sentiment.documents[0].score * 100)).toString() + '%' : '';\n  }\n\n  private refreshDetection() {\n    this.sentiment = null;\n    this.isLoading = true;\n\n    this.analysisText = '';\n    this.detectedLanguageISOName = '';\n    this.detectedLanguage = '';\n\n    if (this.textToAnalyze.trim().length === 0) {\n      this.errorMessage = 'Enter text to analyze';\n      this.isLoading = false;\n      this.analysisText = '';\n    } else {\n      this.textDataService.analyzeSentiment(this.textToAnalyze)\n        .then(sentiment => {\n          this.sentiment = sentiment;\n        })\n        .catch((error) => {\n          this.errorMessage = error;\n          this.isLoading = false;\n          return;\n        });\n\n      this.textDataService.analyzeLanguage(this.textToAnalyze)\n        .then(languageDetect => {\n          this.languageDetect = languageDetect;\n\n          if (this.languageDetect.documents.length > 0) {\n            if (this.languageDetect.documents[0].detectedLanguages.length > 0) {\n              this.detectedLanguageISOName = this.languageDetect.documents[0].detectedLanguages[0].iso6391Name;\n              this.detectedLanguage = this.languageDetect.documents[0].detectedLanguages[0].name;\n\n              this.textDataService.analyzeKeyPhrases(this.textToAnalyze, this.detectedLanguageISOName)\n                .then(languageKeyPhrases => {\n                  this.languageKeyPhrases = languageKeyPhrases;\n                  this.keyPhrases = languageKeyPhrases.documents[0].keyPhrases;\n                })\n                .catch((error) => {\n                  this.errorMessage = error;\n                  this.isLoading = false;\n                  return;\n                });\n            }\n          }\n        })\n        .catch((error) => {\n          this.errorMessage = error;\n          this.isLoading = false;\n          return;\n        });\n\n      this.isLoading = false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/demo/text/text-analysis/text-analysis.component.ts","import { Output, EventEmitter } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer } from '@angular/platform-browser';\nimport { CognitiveServicesComponent } from '../cognitive-services.component';\nimport { IRectangle } from '../../cognitive-services/models/vision.models';\n\nexport class ImageSelectedEvent {\n    imagePath: string;\n}\n\nexport abstract class VisionComponent extends CognitiveServicesComponent {\n    @Output() imageSelected = new EventEmitter<ImageSelectedEvent>();\n\n    selectedImage: HTMLImageElement;\n    imagePosition: {\n        container: HTMLElement;\n        scale: number;\n    };\n    imageList: Array<string>;\n    selectedImageUrl: SafeResourceUrl;\n    internetImageUrl: string;\n    faceRectangles: Array<any> = [];\n    faceIds: Array<string> = [];\n\n    constructor(protected sanitizer: DomSanitizer) {\n        super();\n    }\n\n    // Implement these in child classes\n    protected abstract refreshDetection(): void;\n    protected abstract processFile(result: any): void;\n\n    clearFaces(): void {\n        this.faceRectangles = [];\n    }\n\n    onInternetUrlSelected(): void {\n        this.errorMessage = '';\n        this.selectedImageUrl = this.internetImageUrl;\n        this.imageSelected.emit({ imagePath: this.internetImageUrl });\n        this.refreshDetection();\n    }\n\n    selectStockImage(imagePath: string) {\n        if (!this.isLoading) {\n            this.errorMessage = '';\n            this.selectedImageUrl = imagePath;\n            this.internetImageUrl = imagePath;\n            this.imageSelected.emit({ imagePath: this.internetImageUrl });\n            this.refreshDetection();\n        }\n    }\n\n    onFilesSelected(event: Event): void {\n        this.errorMessage = '';\n        const file = (<HTMLInputElement>event.target).files[0];\n        const url = this.sanitizer.bypassSecurityTrustUrl(window.URL.createObjectURL(file));\n\n        this.selectedImageUrl = url;\n        this.internetImageUrl = '';\n        this.clearFaces();\n\n        const fileReader = new FileReader();\n\n        fileReader.onloadend = () => {\n            this.processFile(fileReader.result);\n        };\n\n        fileReader.readAsArrayBuffer(file);\n        (<HTMLInputElement>event.target).value = '';\n    }\n\n    onFilesClicked(event: Event): void {\n        (<HTMLInputElement>event.target).value = '';\n    }\n\n    selectedImageLoaded(event: Event) {\n        this.selectedImage = <HTMLImageElement>event.target;\n        this.imagePosition = {\n            container: this.selectedImage.parentElement,\n            scale: this.selectedImage.width / this.selectedImage.naturalWidth\n        };\n    }\n\n    protected processFaceRectangle(faceRectangle: IRectangle) {\n        const top = (faceRectangle.top * this.imagePosition.scale + this.selectedImage.offsetTop) /\n                        this.imagePosition.container.clientHeight * 100;\n        const left = (faceRectangle.left * this.imagePosition.scale + this.selectedImage.offsetLeft) /\n                        this.imagePosition.container.clientWidth * 100;\n        const width = (faceRectangle.width * this.imagePosition.scale) /\n                        this.imagePosition.container.clientWidth * 100;\n        const height = (faceRectangle.height * this.imagePosition.scale) /\n                        this.imagePosition.container.clientHeight * 100;\n\n        const faceRectangleStyle = {\n            percentTop: top,\n            percentLeft: left,\n            percentWidth: width,\n            percentHeight: height\n        };\n\n        return faceRectangleStyle;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/demo/vision/vision.component.ts","// tslint:max-line-length\nexport const environment = {\n  production: false,\n  apiServer: 'https://southcentralus.api.cognitive.microsoft.com',\n  apiKeys: {\n    computerVision: '0427ac6c10ef4564b4883f704b708740',\n    face: '',\n    textAnalytics: ''\n  },\n  faceImageUrls: [\n    'https://azurecomcdn.azureedge.net/cvt-f5ab578f41fc8f93ac9c7f1cd40941f1dcde8887a48baba731a3bebf350cfb50/images/shared/cognitive-services-demos/face-detection/detection-1.jpg',\n    'https://azurecomcdn.azureedge.net/cvt-f5ab578f41fc8f93ac9c7f1cd40941f1dcde8887a48baba731a3bebf350cfb50/images/shared/cognitive-services-demos/face-detection/detection-2.jpg',\n    'https://azurecomcdn.azureedge.net/cvt-f5ab578f41fc8f93ac9c7f1cd40941f1dcde8887a48baba731a3bebf350cfb50/images/shared/cognitive-services-demos/face-detection/detection-3.jpg',\n    'https://azurecomcdn.azureedge.net/cvt-f5ab578f41fc8f93ac9c7f1cd40941f1dcde8887a48baba731a3bebf350cfb50/images/shared/cognitive-services-demos/face-detection/detection-4.jpg',\n    'https://azurecomcdn.azureedge.net/cvt-f5ab578f41fc8f93ac9c7f1cd40941f1dcde8887a48baba731a3bebf350cfb50/images/shared/cognitive-services-demos/face-detection/detection-5.jpg',\n    'https://azurecomcdn.azureedge.net/cvt-f5ab578f41fc8f93ac9c7f1cd40941f1dcde8887a48baba731a3bebf350cfb50/images/shared/cognitive-services-demos/face-detection/detection-6.jpg'\n  ],\n  faceImagePairs: [\n    {\n      image1:\n        'https://ia.media-imdb.com/images/M/MV5BMjIyMDI4MzY0OV5BMl5BanBnXkFtZTgwMDYyODgxMzE@._V1_SY1000_CR0,0,1480,1000_AL_.jpg',\n      image2: 'https://ia.media-imdb.com/images/M/MV5BMTkxNzAwODEzN15BMl5BanBnXkFtZTYwMDIzODM2._V1_.jpg'\n    },\n    {\n      image1:\n        'https://ia.media-imdb.com/images/M/MV5BYzcxZDliNzgtYjQ0NS00MDI0LTkzMDctMjUwMDhhODg4YTFiXkEyXkFqcGdeQXVyMjE5MzM3MjA@._V1_.jpg',\n      image2: 'https://ia.media-imdb.com/images/M/MV5BMjA5ODgwNzA1NV5BMl5BanBnXkFtZTcwNDA0MzYyNw@@._V1_.jpg'\n    },\n    {\n      image1: 'https://ia.media-imdb.com/images/M/MV5BMjA1NDM0MDc3NF5BMl5BanBnXkFtZTYwOTA4MDU2._V1_.jpg',\n      image2: 'https://ia.media-imdb.com/images/M/MV5BMTI4ODEzNzkzM15BMl5BanBnXkFtZTYwMjczMTQ2._V1_.jpg'\n    }\n  ],\n  emotionImageUrls: [\n    'https://azurecomcdn.azureedge.net/cvt-c279d652f08698664d10c9ce4fc15527a238b442f47fc23d42515b257cf70957/images/shared/cognitive-services-demos/recognize-emotion/emotion-1.jpg',\n    'https://azurecomcdn.azureedge.net/cvt-c279d652f08698664d10c9ce4fc15527a238b442f47fc23d42515b257cf70957/images/shared/cognitive-services-demos/recognize-emotion/emotion-2.jpg',\n    'https://azurecomcdn.azureedge.net/cvt-c279d652f08698664d10c9ce4fc15527a238b442f47fc23d42515b257cf70957/images/shared/cognitive-services-demos/recognize-emotion/emotion-3.jpg',\n    'https://azurecomcdn.azureedge.net/cvt-c279d652f08698664d10c9ce4fc15527a238b442f47fc23d42515b257cf70957/images/shared/cognitive-services-demos/recognize-emotion/emotion-4.jpg',\n    'https://azurecomcdn.azureedge.net/cvt-c279d652f08698664d10c9ce4fc15527a238b442f47fc23d42515b257cf70957/images/shared/cognitive-services-demos/recognize-emotion/emotion-5.jpg',\n    'https://azurecomcdn.azureedge.net/cvt-c279d652f08698664d10c9ce4fc15527a238b442f47fc23d42515b257cf70957/images/shared/cognitive-services-demos/recognize-emotion/emotion-6.jpg'\n  ],\n  textImageUrls: [\n    'https://azurecomcdn.azureedge.net/cvt-72608df6b76809061acf15373a0cd185c594a46fa873ad20f9f8e6c1739fa45b/images/shared/cognitive-services-demos/read-text/read-1.jpg',\n    'https://azurecomcdn.azureedge.net/cvt-72608df6b76809061acf15373a0cd185c594a46fa873ad20f9f8e6c1739fa45b/images/shared/cognitive-services-demos/read-text/read-2.jpg',\n    'https://azurecomcdn.azureedge.net/cvt-72608df6b76809061acf15373a0cd185c594a46fa873ad20f9f8e6c1739fa45b/images/shared/cognitive-services-demos/read-text/read-3.jpg',\n    'https://azurecomcdn.azureedge.net/cvt-72608df6b76809061acf15373a0cd185c594a46fa873ad20f9f8e6c1739fa45b/images/shared/cognitive-services-demos/read-text/read-4.jpg',\n    'https://azurecomcdn.azureedge.net/cvt-72608df6b76809061acf15373a0cd185c594a46fa873ad20f9f8e6c1739fa45b/images/shared/cognitive-services-demos/read-text/read-5.jpg',\n    'https://azurecomcdn.azureedge.net/cvt-72608df6b76809061acf15373a0cd185c594a46fa873ad20f9f8e6c1739fa45b/images/shared/cognitive-services-demos/read-text/read-6.jpg'\n  ],\n  objectImageUrls: [\n    'http://d1466nnw0ex81e.cloudfront.net/n_iv/600/3180776.jpg',\n    'http://vignette.wikia.nocookie.net/spiderman/images/e/ea/Spidey_1.png/revision/latest?cb=20140816173914',\n    'http://www.writeups.org/wp-content/uploads/Superman-Robot-DC-Comics.jpg',\n    'http://img.wennermedia.com/social/rs-239344-chris-evans.jpg',\n    'https://www.wikihow.com/images/8/84/Draw-Wonder-Woman-Step-18.jpg',\n    'https://vignette.wikia.nocookie.net/ironman/images/5/59/Robert-Downey-Jr-Tony-Stark-Iron-Man-3-Marvel-Disney.jpg/revision/latest?cb=20130611164804',\n    'https://i.ytimg.com/vi/4KtJ9pQVLSU/maxresdefault.jpg',\n    'https://vignette.wikia.nocookie.net/deathbattlefanon/images/2/20/C0A9B238-91F6-46AA-ABDC-3FC720228C25.png/revision/latest?cb=20171104014554',\n\n\n    'http://livekindlyproduction-8u6efaq1lwo6x9a.stackpathdns.com/wp-content/uploads/2017/11/deadpool-2.jpg',\n  ]\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}